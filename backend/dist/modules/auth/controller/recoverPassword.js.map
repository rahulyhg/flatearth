{"version":3,"sources":["../../../../src/modules/auth/controller/recoverPassword.js"],"names":["post","ctx","email","request","body","user","find","where","throw","token","sign","toJSON","secret","expiresIn","oneDay","update","passwordResetToken","passwordResetTokenExpiries","Date","now","api","e","log","error","err"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AACA;;;;;;;;kBAQe;AACb,QAAMA,IAAN,CAAWC,GAAX,EAAgB;AACd,kCAAeA,GAAf,EAAoB,OAApB;AACA,UAAM,EAAEC,KAAF,KAAYD,IAAIE,OAAJ,CAAYC,IAA9B;AACA,UAAMC,OAAO,MAAM,eAAKC,IAAL,CAAU,EAAEC,OAAO,EAAEL,KAAF,EAAT,EAAV,CAAnB;AACA,QAAI,CAACG,IAAL,EAAW;AACTJ,UAAIO,KAAJ,CAAU,GAAV,EAAe,gBAAf;AACD;AACD,UAAMC,QAAQ,uBAAIC,IAAJ,CAASL,KAAKM,MAAL,EAAT,EAAwB,iBAAOC,MAA/B,EAAuC,EAAEC,WAAW,IAAb,EAAvC,CAAd;AACA,UAAMC,SAAS,KAAK,EAAL,GAAU,EAAV,GAAe,IAA9B;AACA,QAAI;AACF;AACAT,WAAKU,MAAL,CAAY,EAAEC,oBAAoBP,KAAtB,EAA6BQ,4BAA4BC,KAAKC,GAAL,KAAaL,MAAtE,EAAZ;AACAb,UAAImB,GAAJ,CAAQ,GAAR,EAAa,EAAEX,KAAF,EAAb;AACD,KAJD,CAIE,OAAOY,CAAP,EAAU;AACVpB,UAAIqB,GAAJ,CAAQC,KAAR,CAAc,EAAEC,KAAKH,CAAP,EAAd,EAA0B,oBAA1B;AACApB,UAAIO,KAAJ,CAAU,GAAV,EAAe,4BAAf;AACD;AACF;AAlBY,C","file":"recoverPassword.js","sourcesContent":["import jwt from 'jsonwebtoken';\nimport config from 'config';\nimport User from '../../../models/User';\n\nimport bodyValidation from '../service/bodyValidation';\n/*\nROUTE /api/v1/auth/recover-password\n  QUERY POST:\n   - { email: string }\n  ANSWERS:\n   - { status: 'success', token: 'some-token' }\n   - { status: 'error', message: 'some-error' }\n*/\nexport default {\n  async post(ctx) {\n    bodyValidation(ctx, 'email');\n    const { email } = ctx.request.body;\n    const user = await User.find({ where: { email } });\n    if (!user) {\n      ctx.throw(500, 'user not found');\n    }\n    const token = jwt.sign(user.toJSON(), config.secret, { expiresIn: '1d' });\n    const oneDay = 60 * 60 * 24 * 1000;\n    try {\n      // db.sequelize.transaction(t =>\n      user.update({ passwordResetToken: token, passwordResetTokenExpiries: Date.now() + oneDay });\n      ctx.api(200, { token });\n    } catch (e) {\n      ctx.log.error({ err: e }, 'Transaction failed');\n      ctx.throw(500, 'connection to db is broken');\n    }\n  }\n};\n"]}