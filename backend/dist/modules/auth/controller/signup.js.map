{"version":3,"sources":["../../../../src/modules/auth/controller/signup.js"],"names":["post","ctx","user","name","email","password","request","body","create","e","errFields","errors","Object","keys","forEach","field","log","error","err","message","duplicate","match","toUpperCase","throw","api"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;kBAEe;AACb,QAAMA,IAAN,CAAWC,GAAX,EAAgB;AACd,kCAAeA,GAAf,EAAoB,MAApB,EAA4B,OAA5B,EAAqC,UAArC;AACA,UAAM,EAAEC,MAAMC,IAAR,EAAcC,KAAd,EAAqBC,QAArB,KAAkCJ,IAAIK,OAAJ,CAAYC,IAApD;AACA,QAAIL,IAAJ;AACA,QAAI;AACFA,aAAO,MAAM,eAAKM,MAAL,CAAY,EAAEL,IAAF,EAAQC,KAAR,EAAeC,QAAf,EAAZ,CAAb;AACD,KAFD,CAEE,OAAOI,CAAP,EAAU;AACV,UAAIC,SAAJ;AACA,UAAID,EAAEE,MAAN,EAAc;AACZC,eAAOC,IAAP,CAAYJ,EAAEE,MAAd,EAAsBG,OAAtB,CAA8BC,SAAS;AACrCd,cAAIe,GAAJ,CAAQC,KAAR,CAAc,EAAEC,KAAKT,EAAEE,MAAF,CAASI,KAAT,CAAP,EAAd,EAAwC,cAAxC;AACAL,sBAAYD,EAAEE,MAAF,CAASI,KAAT,EAAgBI,OAA5B;AACD,SAHD;AAID,OALD,MAKO;AACL,cAAMC,YAAYX,EAAEU,OAAF,CAAUE,KAAV,CAChB,uEADgB,CAAlB;AAGAX,oBAAYU,UAAU,CAAV,KAAgBA,UAAU,CAAV,CAA5B;AACAV,oBAAa,GAAEA,UAAUY,WAAV,EAAwB,UAAvC;AACArB,YAAIe,GAAJ,CAAQC,KAAR,CAAc,EAAEC,KAAKT,CAAP,EAAd,EAA2B,gBAAeC,SAAU,EAApD;AACD;AACDT,UAAIsB,KAAJ,CAAU,GAAV,EAAeb,aAAaD,EAAEU,OAAf,IAA0B,kBAAzC;AACD;;AAEDlB,QAAIuB,GAAJ,CAAQ,GAAR;AACD;AA1BY,C","file":"signup.js","sourcesContent":["import User from '../../../models/User';\nimport bodyValidation from '../service/bodyValidation';\n\nexport default {\n  async post(ctx) {\n    bodyValidation(ctx, 'user', 'email', 'password');\n    const { user: name, email, password } = ctx.request.body;\n    let user;\n    try {\n      user = await User.create({ name, email, password });\n    } catch (e) {\n      let errFields;\n      if (e.errors) {\n        Object.keys(e.errors).forEach(field => {\n          ctx.log.error({ err: e.errors[field] }, 'signup error');\n          errFields = e.errors[field].message;\n        });\n      } else {\n        const duplicate = e.message.match(\n          /index\\:\\ (?:.*\\.)?\\$?(?:([_a-z0-9]*)(?:_\\d*)|([_a-z0-9]*))\\s*dup key/i\n        );\n        errFields = duplicate[1] || duplicate[2];\n        errFields = `${errFields.toUpperCase()} in use `;\n        ctx.log.error({ err: e }, `signup error ${errFields}`);\n      }\n      ctx.throw(422, errFields || e.message || 'Bad credentials.');\n    }\n\n    ctx.api(200);\n  }\n};\n"]}